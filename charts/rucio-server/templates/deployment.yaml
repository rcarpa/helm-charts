{{- if gt .Values.replicaCount 0.0 -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "rucio.fullname" . }}
  labels:
    app: {{ template "rucio.name" . }}
    chart: {{ template "rucio.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "rucio.name" . }}
      release: {{ .Release.Name }}
  strategy:
    type: {{ .Values.strategy.type }}
{{- if eq .Values.strategy.type "RollingUpdate" }}
    {{- with .Values.strategy.rollingUpdate }}
    rollingUpdate:
{{ toYaml . | trim | indent 6 }}
    {{- end }}
{{- end }}
  minReadySeconds: {{ .Values.minReadySeconds.server }}
  template:
    metadata:
      labels:
        app: {{ template "rucio.name" . }}
        release: {{ .Release.Name }}
    spec:
    {{- if .Values.serviceAccountName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
    {{- end }}
      volumes:
      - name: proxy-volume
        secret:
          secretName: {{ .Release.Name }}-rucio-x509up
      - name: ca-volume
        secret:
          secretName: {{ .Release.Name }}-rucio-ca-bundle
      - name: httpdlog
        emptyDir: {}
      {{- range $key, $val := .Values.additionalSecrets }}
      - name: {{ $key }}
        secret:
          secretName: {{ $.Release.Name }}-{{ $val.secretName }}
      {{- end}}
      {{- range $key, $val := .Values.persistentVolumes }}
      - name: {{ $key }}
        persistentVolumeClaim:
          claimName: {{ $val.name }}
      {{- end}}
{{- if .Values.useSSL.server }}
      - name: hostcert
        secret:
          secretName: {{ .Release.Name }}-server-hostcert
      - name: hostkey
        secret:
          secretName: {{ .Release.Name }}-server-hostkey
      - name: cafile
        secret:
          secretName: {{ .Release.Name }}-server-cafile
{{- end }}
      containers:
{{- if .Values.exposeErrorLogs.server }}
        - name: httpd-error-log
          image: busybox
          args: [/bin/sh, -c, 'tail -n+1 -f /var/log/httpd/error_log']
          volumeMounts:
          - name: httpdlog
            mountPath: /var/log/httpd
          resources:
{{ toYaml .Values.errorLogsExporterResources | indent 12 }}
{{- end }}
{{- if .Values.monitoring.enabled }}
        - name: apache-exporter
          image: rucio/apache_exporter
{{- if .Values.useSSL.server }}
          args: ['--telemetry.address=:{{ .Values.monitoring.exporterPort }}', '--scrape_uri=https://localhost/server-status/?auto', '--insecure']
{{ else }}
          args: ['--telemetry.address=:{{ .Values.monitoring.exporterPort }}']
{{ end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.monitoring.exporterPort }}
              protocol: TCP
          resources:
{{ toYaml .Values.metricsExporterResources | indent 12 }}
{{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
{{ toYaml .Values.serverResources | indent 12 }}
          volumeMounts:
          - name: proxy-volume
            mountPath: /opt/proxy
          - name: ca-volume
            mountPath: /opt/certs
          - name: httpdlog
            mountPath: /var/log/httpd
          {{- range $key, $val := .Values.additionalSecrets }}
          {{- range $val.subPaths }}
          - name: {{ $key }}
            mountPath: {{ $val.mountPath }}{{ . }}
            subPath: {{ . }}
          {{- end}}
          {{- end}}
          {{- range $key, $val := .Values.persistentVolumes }}
          - name: {{ $key }}
            mountPath: {{ $val.mountPath }}
          {{- end}}
{{- if .Values.useSSL.server }}
          - name: hostcert
            mountPath: /etc/grid-security/hostcert.pem
            subPath: hostcert.pem
          - name: hostkey
            mountPath: /etc/grid-security/hostkey.pem
            subPath: hostkey.pem
          - name: cafile
            mountPath: /etc/grid-security/ca.pem
            subPath: ca.pem
{{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
{{- if .Values.useSSL.server }}
              scheme: HTTPS
              port: 443
{{- else }}
              port: 80
{{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.server.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.server.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.server.timeoutSeconds }}
          env:
            {{- range $key, $val := .Values.httpd_config }}
            - name: RUCIO_HTTPD_{{ $key | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "rucio.fullname" $ }}.cfg
                  key: {{ $key }}
            {{- end}}
            {{- range $key1, $val1 := .Values.config }}
            {{- range $key2, $val2 := $val1}}
            - name: RUCIO_CFG_{{ $key1 | upper }}_{{ $key2 | upper }}
              valueFrom:
                secretKeyRef:
                  name: {{ template "rucio.fullname" $ }}.cfg
                  key: {{ $key1 }}_{{ $key2 }}
            {{- end}}
            {{- end}}
            {{- range $key1, $val1 := .Values.optional_config }}
            - name: {{ $key1 | upper }}
              value: "{{ $val1  }}"
            {{- end}}
{{- if .Values.useSSL.server }}
            - name: RUCIO_ENABLE_SSL
              value: "True"
            - name: OPENSSL_ALLOW_PROXY_CERTS
              value: "1"
{{- else }}
            - name: RUCIO_ENABLE_SSL
              value: "False"
{{- end }}
            - name: RUCIO_SERVER_TYPE
              value: "{{ .Values.serverType.server }}"
            - name: RUCIO_LOG_FORMAT
              value: '{{ .Values.logFormat.server }}'
            - name: RUCIO_WSGI_DAEMON_PROCESSES
              value: "{{ .Values.wsgi.daemonProcesses }}"
            - name: RUCIO_WSGI_DAEMON_THREADS
              value: "{{ .Values.wsgi.daemonThreads }}"
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end }}
